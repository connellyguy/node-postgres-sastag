<% include partials/header-top-half.ejs %>

<!-- chart.js stylesheet -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css" integrity="sha256-aa0xaJgmK/X74WM224KMQeNQC2xYKwlAt08oZqjeF0E=" crossorigin="anonymous" />

<% include partials/header-bottom-half.ejs %>
<div class="container-fluid wrapper dash-wrapper">
    <nav class="bg-light col-sm-3 col-lg-2 sidebar" id="sidebar">
        <div class="sidebar-sticky">
            <div id="dismiss">
                <a href="#"><span data-feather="arrow-left"></span></a>
            </div>
            <div class="sidebar-header mx-4">
                <h3 class="text-muted">Analytics Dashboard</h3>
            </div>
            <ul class="nav flex-column mx-3">
                <!--<li class="nav-item">
                    <a class="nav-link active" href="#">
                        <span data-feather="grid"></span>
                        Dashboard
                    </a>
                </li>-->
                <li class="nav-item mt-4 ml-3">
                    <form>
                        <div class="form-row mb-3">
                            <select id="timeframeFilter" class="form-control">
                                <option value="1 week">1 Week</option>
                                <option value="2 weeks">2 Weeks</option>
                                <option value="3 weeks">3 Weeks</option>
                                <option value="1 month">1 Month</option>
                                <option value="2 months">2 Months</option>
                                <option value="3 months">3 Months</option>
                                <option value="6 months">6 Months</option>
                                <option selected value="all">All Time</option>
                            </select>
                        </div>
                    </form>
                    <!--<button id="apply_filter" class="btn btn-outline-secondary">Apply Filter</button>-->
                  </li>
                </ul>
        </div>
    </nav>
    <main role="main" class="col mx-auto px-4 main">
        <div class="row mx-sm-auto mx-lg-5">
            <div id="timeline" class="chart chart-holder" style="height: 520px;"></div>
        </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="mb-lg-4 chart-holder" id="longtimeDiv">
                        <canvas id="longtimeChart"></canvas>
                    </div>
                    <div class="table-responsive-md">
                        <table id="longtimeTable" class="table table-hovered table-responsive-md table-striped shadow">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col" style="width:10% !important">Rank</th>
                                    <th scope="col" style="width:55% !important">Player</th>
                                    <th scope="col" class="text-right" style="width:35% !important">Total Time as IT</th>
                                </tr>
                            </thead>
                            <tbody>
                                
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="mb-lg-4 chart-holder" id="shortavgDiv">
                        <canvas id="shortavgChart"></canvas>
                    </div>
                    <div class="table-responsive-md">
                        <table id="shortavgTable" class="table table-hovered table-responsive-md table-striped shadow">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col" style="width:10% !important">Rank</th>
                                    <th scope="col" style="width:55% !important">Player</th>
                                    <th scope="col" class="text-right" style="width:35% !important">Avg Time as IT</th>
                                </tr>
                            </thead>
                            <tbody>
                                
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6" >
                    <div class="chart-holder" id="mosttagDiv">
                        <canvas id="mosttagChart"></canvas>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="table-responsive-md">
                        <table id="mosttagTable" class="table table-hovered table-responsive-md table-striped shadow">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col" style="width:10% !important">Rank</th>
                                    <th scope="col" style="width:55% !important">Player</th>
                                    <th scope="col" class="text-right" style="width:35% !important">Times Tagged</th>
                                </tr>
                            </thead>
                            <tbody>
                                
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
    </main>

</div>
</div>

<!-- Google Charts js files -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo= sha384-vk5WoKIaW/vJyUAd9n/wmopsmNhiy+L2Z+SBxGYnUkunIxVxAv/UtMOhba/xskxh sha512-bnIvzh6FU75ZKxp0GXLH9bewza/OIw6dLVh9ICg0gogclmYGguQJWl8U30WpbsGTqbIiAwxTsbe76DErLq5EDQ==" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<!-- Chart.js files -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js" integrity="sha256-Uv9BNBucvCPipKQ2NS9wYpJmi8DTOEfTA/nH2aoJALw=" crossorigin="anonymous"></script>


<script type="text/javascript">

    function getTimeFrame() {
        var timeframeFilter = document.getElementById('timeframeFilter');
        return timeframeFilter.options[timeframeFilter.selectedIndex].value;
    }

    function getLoadSVG() {
        return '<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="64px" height="64px" viewBox="0 0 128 128" xml:space="preserve"><g><path d="M78.75 16.18V1.56a64.1 64.1 0 0 1 47.7 47.7H111.8a49.98 49.98 0 0 0-33.07-33.08zM16.43 49.25H1.8a64.1 64.1 0 0 1 47.7-47.7V16.2a49.98 49.98 0 0 0-33.07 33.07zm33.07 62.32v14.62A64.1 64.1 0 0 1 1.8 78.5h14.63a49.98 49.98 0 0 0 33.07 33.07zm62.32-33.07h14.62a64.1 64.1 0 0 1-47.7 47.7v-14.63a49.98 49.98 0 0 0 33.08-33.07z" fill="#5c7fbc" fill-opacity="1"/><animateTransform attributeName="transform" type="rotate" from="0 64 64" to="-90 64 64" dur="600ms" repeatCount="indefinite"></animateTransform></g></svg>';
    }

    google.charts.load('current', {packages: ['corechart','timeline']});
    google.charts.setOnLoadCallback(updateAllData);

    function genTooltip(startDate, endDate, tagged_by, tagged, it) {
            var diff = Math.round((endDate-startDate)/1000);
            
            var days = Math.floor(diff/(24*60*60));
            diff = diff-(days*24*60*60);
            var hours = Math.floor(diff/(60*60));
            diff = diff-(hours*60*60);
            var minutes = Math.floor(diff/(60));

            return '<div style="padding:5px 5px 5px 5px; width: 220px;"><div style="font-size:120%">' + (days > 0 ? days + ' Day' + (days !== 1 ? 's, ':', ') : '') + (hours > 0 ? hours + ' Hour' + (hours !== 1 ? 's, ':', ') : '') + minutes + ' Minute' + (minutes !== 1 ? 's':'') + '</div><b>IT:</b> ' + it + '<br><b>Tagged By:</b> ' + tagged_by + ' <br><b>Tagged:</b> ' + tagged + '<br></div>';
    }

    function updateAllData() {
        getChartData();
        getLongTimeData();
        getShortAvgData();
        getMostTagData();
    }

    function getChartData() {
        var dataRows = [];
        $.ajax({
        url: "/db/timeline/" + getTimeFrame(),
        beforeSend: function(){
            $("#timeline").html(getLoadSVG());
        },
        success: function (result) {
                dataRows = []
                let prev_time = new Date(); 
                result.forEach((tag, index) => {
                    let tag_time = new Date(tag.tag_time);
                    tag_time.setHours(tag_time.getHours() - 4)
                    if (index > 0) {
                        var dataRow = [];
                        tagger_full_name = tag.tagger_first_name + ' ' + tag.tagger_last_name;
                        tagee_full_name = tag.tagee_first_name + ' ' + tag.tagee_last_name;
                        if (tag.tagee_id == tag.tagger_id) {
                            tagee_full_name = '';
                        };
                        prev_tagger_full_name = tag.prev_tagger_first_name + ' ' + tag.prev_tagger_last_name;
                        dataRow.push(tagger_full_name);
                        dataRow.push(' ');
                        dataRow.push(genTooltip(prev_time, tag_time, prev_tagger_full_name, tagee_full_name, tagger_full_name));
                        dataRow.push(prev_time);
                        dataRow.push(tag_time);
                        dataRows.push(dataRow);
                    };
                    prev_time = tag_time;
                });
            },
        error: function (err) {
            var dataRows = [];
            console.log('Error on ajax request');
        }
        }).done(function() { 
            drawChart(dataRows);
        });
    }

    function drawChart(chartData) {
		var container = document.getElementById('timeline');
        var chart = new google.visualization.Timeline(container);
        var dataTable = new google.visualization.DataTable();

        dataTable.addColumn({ type: 'string', id: 'IT' });
        dataTable.addColumn({ type: 'string', id: 'dummy bar label' });
        dataTable.addColumn({ type: 'string', role: 'tooltip', 'p': {'html': true} });
        dataTable.addColumn({ type: 'date', id: 'Start' });
        dataTable.addColumn({ type: 'date', id: 'End' });
        dataTable.addRows(chartData);

        var options = {
        	timeline: {singleColor: '#5B69FD'},
            tooltip: { isHtml: true },
        };

        chart.draw(dataTable, options);
    }

    function formatSecAsDur(secondsIn) {
        let duration = moment.duration(secondsIn, 'seconds');
        outstr = '';
        if (duration.days() >= 2) {
            outstr += duration.days() + ' Days, '
        } else if (duration.days()) {
            outstr += duration.days() + ' Day, '
        }
        duration.subtract(duration.days(),'d');
        outstr += moment().startOf('day').seconds(duration.asSeconds()).format('HH:mm:ss');
        return outstr;
    }

    function formatSecAsDays(secondsIn) {
        let duration = moment.duration(secondsIn, 'seconds');
        outstr = '';
        if (duration.days() >= 2) {
            outstr += duration.days() + ' Days'
        } else if (duration.days()) {
            outstr += duration.days() + ' Day'
        } else {
            outstr += '0 Days'
        }
        if (duration.days() < 2 && duration.hours() > 0) {
            duration.subtract(duration.days(),'d');
            outstr += ', ' + duration.hours() + ' Hrs';
        }
        return outstr;
    }

    function getPlayerColor(player_id, opacity) {
        switch (player_id) {
            case 1:
                return 'rgba(255,171,132,' + opacity + ')';
            break; 

            case 2:
                return 'rgba(39,40,56,' + opacity + ')';
            break; 

            case 3:
                return 'rgba(220,117,143,' + opacity + ')';
            break;

            case 6:
                return 'rgba(129,94,91,' + opacity + ')';
            break;

            case 7:
                return 'rgba(70,18,32,' + opacity + ')';
            break;

            case 8:
                return 'rgba(232,214,118,' + opacity + ')';
            break;

            case 9:
                return 'rgba(141,181,128,' + opacity + ')';
            break;

            case 10:
                return 'rgba(117,185,190,' + opacity + ')';
            break;

            case 11:
                return 'rgba(4,42,43,' + opacity + ')';
            break;

            case 13:
                return 'rgba(236,145,146,' + opacity + ')';
            break;

            case 42:
                return 'rgba(181,189,137,' + opacity + ')';
            break;

            default:
                return 'rgba(92,128,188,' + opacity + ')';
        }
    }

    function drawBarGraph(data_labels, data, bar_color, border_color, data_label, ctx) {
        var myChart = new Chart(ctx, {
            type: 'horizontalBar',
            data: {
                labels: data_labels,
                datasets: [{
                    label: data_label,
                    data: data,
                    backgroundColor: bar_color,
                    borderColor: border_color,
                    borderWidth: 1,
                }]
            },
            options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            beginAtZero: true,
                            callback: function(value, index, values) {
                                return formatSecAsDays(value);
                            },
                        },
                    },],
                },
                tooltips: {
                    callbacks: {
                        label: function(tooltipItem, data) {
                            var label = data.datasets[tooltipItem.datasetIndex].label || '';

                            if (label) {
                                label += ': ';
                            }
                            label += formatSecAsDur(tooltipItem.xLabel);
                            return label;
                        },
                    },
                },
                title: {
                    display: true,
                    text: data_label,
                },
                legend: {
                    display: false,
                },
            },
        });
    }

    function drawDoughnutChart(data_labels, data, segment_color, data_label, ctx) {
        var myChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: data_labels,
                    datasets: [{
                        label: data_label,
                        data: data,
                        backgroundColor: segment_color,
                    }]
                },
                options: {
                    legend: {
                        display: false,
                    },
                    title: {
                        display: true,
                        text: data_label,
                    }
                },
            });
    }

    function getLongTimeData() {
        
        var player_names = [];
        var player_times = [];
        var player_bg_colors = [];
        var player_border_colors = [];
        $.ajax({
        url: "/db/longtime/" + getTimeFrame(),
        beforeSend: function(){
            $("#longtimeDiv").html(getLoadSVG());
        },
        success: function (result) {
                $("#longtimeTable").find("tr:gt(0)").remove();
                result.forEach((player, index) => {
                    let rank = index + 1;
                    let full_name = player.first_name + ' ' + player.last_name;
                    player_names.push(full_name);
                    if (player.time_as_it == 0) {
                        player_times.push(0.1);
                    } else {
                        player_times.push(player.time_as_it);
                    }
                    player_bg_colors.push(getPlayerColor(player.it_id, 0.4));
                    player_border_colors.push(getPlayerColor(player.it_id, 1));
                    var time_it_str = formatSecAsDur(player.time_as_it);
                    $("#longtimeTable tbody").append(
                        "<tr>" +
                            "<td>" + rank + "</td>" +
                            "<td>" + full_name + "</td>" +
                            "<td class='text-right'>" + time_it_str + "</td>" +
                        "</tr>"
                    );
                });
            },
        error: function (err) {
            console.log('Error on ajax request');
        }
        }).done(function() {
            $("#longtimeDiv").empty();
            $("div#longtimeDiv").append('<canvas id="longtimeChart" style="height: 20px;"></canvas>');
            var ctx = document.getElementById('longtimeChart').getContext('2d'); 
            drawBarGraph(player_names, player_times, player_bg_colors, player_border_colors, 'Total Time Tagged', ctx);
        });
    }

    function getShortAvgData() {

        var player_names = [];
        var player_times = [];
        var player_bg_colors = [];
        var player_border_colors = [];
        $.ajax({
        url: "/db/shortavg/" + getTimeFrame(),
        beforeSend: function(){
            $("#shortavgDiv").html(getLoadSVG());
        },
        success: function (result) {
                $("#shortavgTable").find("tr:gt(0)").remove();
                result.forEach((player, index) => {
                    let rank = index + 1;
                    let full_name = player.first_name + ' ' + player.last_name;
                    player_names.push(full_name);
                    if (player.avg_time_as_it == 0) {
                        player_times.push(0.1);
                    } else {
                        player_times.push(player.avg_time_as_it);
                    }
                    player_bg_colors.push(getPlayerColor(player.it_id, 0.4));
                    player_border_colors.push(getPlayerColor(player.it_id, 1));
                    var time_it_str = formatSecAsDur(player.avg_time_as_it);
                    $("#shortavgTable tbody").append(
                        "<tr>" +
                            "<td>" + rank + "</td>" +
                            "<td>" + full_name + "</td>" +
                            "<td class='text-right'>" + time_it_str + "</td>" +
                        "</tr>"
                    );
                });
                    },
        error: function (err) {
            console.log('Error on ajax request');
        }
        }).done(function() { 
            $("#shortavgDiv").empty();
            $("div#shortavgDiv").append('<canvas id="shortavgChart" style="height: 20px;"></canvas>');
            var ctx = document.getElementById('shortavgChart').getContext('2d');
            drawBarGraph(player_names, player_times, player_bg_colors, player_border_colors, 'Average Time as IT', ctx);
        });
    }

    function getMostTagData() {

        var player_names = [];
        var player_totals = [];
        var player_colors = [];
        $.ajax({
        url: "/db/mosttag/" + getTimeFrame(),
        beforeSend: function(){
            $("#mosttagDiv").html(getLoadSVG());
        },
        success: function (result) {
                $("#mosttagTable").find("tr:gt(0)").remove();
                result.forEach((player, index) => {
                    let rank = index + 1;
                    let full_name = player.first_name + ' ' + player.last_name;
                    player_names.push(full_name);
                    player_totals.push(Math.round(player.number_of_its));
                    player_colors.push(getPlayerColor(player.it_id, 1));
                    console.log(player_names);
                    console.log(player_colors);
                    $("#mosttagTable tbody").append(
                          "<tr>" +
                            "<td>" + rank + "</td>" +
                            "<td>" + full_name + "</td>" +
                            "<td class='text-right'>" + Math.round(player.number_of_its) + "</td>" +
                          "</tr>"
                    );
                });
            },
        error: function (err) {
            console.log('Error on ajax request');
        }
        }).done(function() { 
            $("#mosttagDiv").empty();
            $("div#mosttagDiv").append('<canvas id="mosttagChart" style="height: 20px;"></canvas>');
            var ctx = document.getElementById('mosttagChart').getContext('2d');
            drawDoughnutChart(player_names, player_totals, player_colors, 'Number of Times Tagged', ctx)
        });
    }

    $(document.getElementById('timeframeFilter').addEventListener('change', function() {
        updateAllData();
        dismissSidebar();
    }));

    $(window).resize(function(){
        getChartData();
    });

    function dismissSidebar() {
            // hide overlay
            $('.overlay').removeClass('active');
            // hide sidebar
            $('#sidebar').removeClass('active');
    };

    $(document).ready(function() {
        $("#menu-button").removeClass('d-none');

        $('#dismiss, .overlay').on('click', function () {
            dismissSidebar();
        });

        $('#menu-button').on('click', function() {
            // show overlay
            $('.overlay').addClass('active');
            // show sidebar
            $('#sidebar').addClass('active');
        });
    });

  </script>

<!-- feather icons javascript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.21.0/feather.min.js" integrity="sha256-qBd447qJjlY5iM+wziRXC/fp1ZS/VF7b0pXn8iANAps=" crossorigin="anonymous"></script>

<!-- moment.js library (used for time computations) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js" integrity="sha256-4iQZ6BVL4qNKlQ27TExEhBN1HFPvAvAMbFavKKosSWQ=" crossorigin="anonymous"></script>

<script>
    // Initialize moment.js
    moment().format();
</script>

<script> 
    // Replace feather icons
    feather.replace();
</script>

<% include partials/footer.ejs%>